{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Niloy\\\\Desktop\\\\Ems\\\\myapp\\\\src\\\\Components\\\\TaskList.js\";\nimport React from 'react';\n\n// Sample task data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tasks = [{\n  id: 1,\n  title: 'Task 1',\n  description: 'Complete the project documentation.',\n  status: 'In Progress'\n}, {\n  id: 2,\n  title: 'Task 2',\n  description: 'Fix the bugs in the application.',\n  status: 'Assigned'\n}, {\n  id: 3,\n  title: 'Task 3',\n  description: 'Prepare for the team meeting.',\n  status: 'Completed'\n}];\nconst TaskList = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4\",\n      children: \"Assigned Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"space-y-4\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"bg-white shadow-md rounded-lg p-4 flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg font-bold\",\n            children: task.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: task.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `inline-block px-2 py-1 text-sm font-semibold rounded-full \n                ${task.status === 'Completed' ? 'bg-green-200 text-green-800' : task.status === 'In Progress' ? 'bg-yellow-200 text-yellow-800' : 'bg-blue-200 text-blue-800'}`,\n          children: task.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","tasks","id","title","description","status","TaskList","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","_c","$RefreshReg$"],"sources":["C:/Users/Niloy/Desktop/Ems/myapp/src/Components/TaskList.js"],"sourcesContent":["import React from 'react';\r\n\r\n// Sample task data\r\nconst tasks = [\r\n  { id: 1, title: 'Task 1', description: 'Complete the project documentation.', status: 'In Progress' },\r\n  { id: 2, title: 'Task 2', description: 'Fix the bugs in the application.', status: 'Assigned' },\r\n  { id: 3, title: 'Task 3', description: 'Prepare for the team meeting.', status: 'Completed' },\r\n];\r\n\r\nconst TaskList = () => {\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto p-4\">\r\n      <h2 className=\"text-2xl font-semibold mb-4\">Assigned Tasks</h2>\r\n      <ul className=\"space-y-4\">\r\n        {tasks.map((task) => (\r\n          <li key={task.id} className=\"bg-white shadow-md rounded-lg p-4 flex justify-between items-center\">\r\n            <div>\r\n              <h3 className=\"text-lg font-bold\">{task.title}</h3>\r\n              <p className=\"text-gray-600\">{task.description}</p>\r\n            </div>\r\n            <span\r\n              className={`inline-block px-2 py-1 text-sm font-semibold rounded-full \r\n                ${task.status === 'Completed' ? 'bg-green-200 text-green-800' : task.status === 'In Progress' ? 'bg-yellow-200 text-yellow-800' : 'bg-blue-200 text-blue-800'}`}\r\n            >\r\n              {task.status}\r\n            </span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,KAAK,GAAG,CACZ;EAAEC,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,QAAQ;EAAEC,WAAW,EAAE,qCAAqC;EAAEC,MAAM,EAAE;AAAc,CAAC,EACrG;EAAEH,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,QAAQ;EAAEC,WAAW,EAAE,kCAAkC;EAAEC,MAAM,EAAE;AAAW,CAAC,EAC/F;EAAEH,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,QAAQ;EAAEC,WAAW,EAAE,+BAA+B;EAAEC,MAAM,EAAE;AAAY,CAAC,CAC9F;AAED,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,oBACEN,OAAA;IAAKO,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCR,OAAA;MAAIO,SAAS,EAAC,6BAA6B;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/DZ,OAAA;MAAIO,SAAS,EAAC,WAAW;MAAAC,QAAA,EACtBP,KAAK,CAACY,GAAG,CAAEC,IAAI,iBACdd,OAAA;QAAkBO,SAAS,EAAC,qEAAqE;QAAAC,QAAA,gBAC/FR,OAAA;UAAAQ,QAAA,gBACER,OAAA;YAAIO,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAAEM,IAAI,CAACX;UAAK;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnDZ,OAAA;YAAGO,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAEM,IAAI,CAACV;UAAW;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,eACNZ,OAAA;UACEO,SAAS,EAAE;AACzB,kBAAkBO,IAAI,CAACT,MAAM,KAAK,WAAW,GAAG,6BAA6B,GAAGS,IAAI,CAACT,MAAM,KAAK,aAAa,GAAG,+BAA+B,GAAG,2BAA2B,EAAG;UAAAG,QAAA,EAEjKM,IAAI,CAACT;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC;MAAA,GAVAE,IAAI,CAACZ,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWZ,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACG,EAAA,GAtBIT,QAAQ;AAwBd,eAAeA,QAAQ;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}