{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Niloy\\\\Desktop\\\\Ems\\\\myapp\\\\src\\\\Components\\\\Performance.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Register the required components from Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction Performance() {\n  _s();\n  const labels = [1, 2, 3, 4, 5, 6, 7]; // X-axis labels\n\n  const id = localStorage.getItem('id');\n  const [data, setData] = useState([]);\n  const [chartData, setChartData] = useState({}); // Initialize chartData state\n\n  const array = Array(7).fill(0); // Initialize array with zeros\n  const array1 = Array(7).fill(0); // Initialize array with zeros\n\n  function formatDate(date) {\n    return date.toISOString().split(\"T\")[0];\n  }\n  const date = new Date();\n  const dayArray = Array.from({\n    length: 7\n  }, (_, i) => {\n    const day = new Date(date);\n    day.setDate(date.getDate() - i + 1);\n    return formatDate(day);\n  });\n  useEffect(() => {\n    axios.get(`http://localhost:8000/gettask/${id}`).then(res => {\n      setData(res.data);\n    }).catch(err => console.error(err)); // Handle errors\n  }, [id]);\n  useEffect(() => {\n    if (data.length === 0) return; // Avoid unnecessary calculations if data is empty\n\n    const newArray = Array(7).fill(0);\n    const newArray1 = Array(7).fill(0);\n    dayArray.forEach((day, index) => {\n      const completedTasks = data.filter(item => item.date === day && item.status).length;\n      const totalTasks = data.filter(item => item.date === day).length;\n      newArray[index] = completedTasks; // Completed tasks\n      newArray1[index] = totalTasks; // Total tasks\n    }, []);\n    setChartData({\n      // Update chartData state\n      labels: labels,\n      datasets: [{\n        label: 'Total Tasks',\n        data: newArray1,\n        backgroundColor: 'rgba(75, 192, 192, 0.5)' // Color for Total Task Dataset\n      }, {\n        label: 'Tasks Completed',\n        data: newArray,\n        backgroundColor: 'rgba(255, 99, 132, 0.5)' // Color for Completed Task Dataset\n      }]\n    });\n  }, [data, dayArray]);\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top' // Position of the legend\n      },\n      title: {\n        display: true,\n        text: 'Performance Overview' // Chart title\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is the performance page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), chartData.labels ?\n    /*#__PURE__*/\n    // Check if chartData has labels before rendering\n    _jsxDEV(Bar, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this) // Render the Bar Chart\n    : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading chart data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this) // Optional loading state\n    ]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(Performance, \"PGtxEPKPXmM0A2S1MnUddtq2IUQ=\");\n_c = Performance;\nexport default Performance;\nvar _c;\n$RefreshReg$(_c, \"Performance\");","map":{"version":3,"names":["React","useEffect","useState","axios","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Performance","_s","labels","id","localStorage","getItem","data","setData","chartData","setChartData","array","Array","fill","array1","formatDate","date","toISOString","split","Date","dayArray","from","length","_","i","day","setDate","getDate","get","then","res","catch","err","console","error","newArray","newArray1","forEach","index","completedTasks","filter","item","status","totalTasks","datasets","label","backgroundColor","options","responsive","plugins","legend","position","title","display","text","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Niloy/Desktop/Ems/myapp/src/Components/Performance.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\n\r\n// Register the required components from Chart.js\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nfunction Performance() {\r\n\r\n \r\n  const labels = [1,2,3,4,5,6,7]; // X-axis labels\r\n\r\n  const id = localStorage.getItem('id');\r\n  const [data, setData] = useState([]);\r\n  const [chartData, setChartData] = useState({}); // Initialize chartData state\r\n\r\n  const array = Array(7).fill(0);  // Initialize array with zeros\r\n  const array1 = Array(7).fill(0); // Initialize array with zeros\r\n\r\n  function formatDate(date) {\r\n    return date.toISOString().split(\"T\")[0];\r\n  }\r\n\r\n  const date = new Date();\r\n  const dayArray = Array.from({ length: 7 }, (_, i) => {\r\n    const day = new Date(date);\r\n    day.setDate(date.getDate() - i+1);\r\n    return formatDate(day);\r\n  });\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:8000/gettask/${id}`)\r\n      .then(res => {\r\n        setData(res.data);\r\n      })\r\n      .catch(err => console.error(err)); // Handle errors\r\n  }, [id]); \r\n\r\n  useEffect(() => {\r\n    if (data.length === 0) return; // Avoid unnecessary calculations if data is empty\r\n\r\n    const newArray = Array(7).fill(0);\r\n    const newArray1 = Array(7).fill(0);\r\n\r\n    dayArray.forEach((day, index) => {\r\n      const completedTasks = data.filter(item => item.date === day && item.status).length;\r\n      const totalTasks = data.filter(item => item.date === day).length;\r\n\r\n      newArray[index] = completedTasks;  // Completed tasks\r\n      newArray1[index] = totalTasks;      // Total tasks\r\n    },[]);\r\n\r\n    setChartData({ // Update chartData state\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: 'Total Tasks',\r\n          data: newArray1,\r\n          backgroundColor: 'rgba(75, 192, 192, 0.5)', // Color for Total Task Dataset\r\n        },\r\n        {\r\n          label: 'Tasks Completed',\r\n          data: newArray,\r\n          backgroundColor: 'rgba(255, 99, 132, 0.5)', // Color for Completed Task Dataset\r\n        },\r\n      ],\r\n    });\r\n  }, [data, dayArray]);\r\n\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top', // Position of the legend\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: 'Performance Overview', // Chart title\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>This is the performance page</h1>\r\n      {chartData.labels ? ( // Check if chartData has labels before rendering\r\n        <Bar data={chartData} options={options} /> // Render the Bar Chart\r\n      ) : (\r\n        <p>Loading chart data...</p> // Optional loading state\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Performance;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}